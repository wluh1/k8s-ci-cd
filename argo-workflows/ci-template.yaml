apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: k8s-ci-template
  namespace: argo

spec:
  serviceAccountName: argo-executor
  retryStrategy:
    retryPolicy: OnError
    limit: 1
  entrypoint: ci-start
  arguments:
    parameters:
      - name: repo
        value: https://github.com/wluh1/k8s-ci-cd.git
      - name: revision
        value: "HEAD"
      - name: deploy-repo
        value: https://github.com/wluh1/k8s-ci-cd-conf.git
      - name: deploy-revision
        value: "HEAD"
  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

  templates:
    - name: ci-start
      steps:
        - - name: checkout
            template: checkout

        - - name: build-entry
            template: build-part
            arguments:
              parameters: [{ name: part, value: "entry" }]

          - name: build-body
            template: build-part
            arguments:
              parameters: [{ name: part, value: "body" }]
          - name: build-hat
            template: build-part
            arguments:
              parameters: [{ name: part, value: "hat" }]
          - name: build-left-arm
            template: build-part
            arguments:
              parameters: [{ name: part, value: "left-arm" }]
          - name: build-left-leg
            template: build-part
            arguments:
              parameters: [{ name: part, value: "left-leg" }]
          - name: build-right-arm
            template: build-part
            arguments:
              parameters: [{ name: part, value: "right-arm" }]
          - name: build-right-leg
            template: build-part
            arguments:
              parameters: [{ name: part, value: "right-leg" }]

        - - name: bump-version
            template: bump-version

    - name: checkout
      inputs:
        artifacts:
          - name: source
            path: /workdir/src
            git:
              repo: "{{workflow.parameters.repo}}"
              revision: "{{workflow.parameters.revision}}"
      container:
        image: golang:1.9.2
        command: ["/bin/sh", "-c"]
        args: ["cd /workdir/src && git status && ls -l"]
        volumeMounts:
          - name: workdir
            mountPath: /workdir

    - name: build-part
      inputs:
        parameters:
          - name: part
      container:
        image: google/cloud-sdk
        command: ["/bin/sh", "-c"]
        args: [
            "
            cd /workdir/src/podtato-head/;
            until docker ps; do sleep 3; done;
            gcloud auth configure-docker europe-west1-docker.pkg.dev;
            chmod +x ./podtato-head-microservices/build/build-entry.sh;
            chmod +x ./podtato-head-microservices/build/build-part.sh;
            make push-{{inputs.parameters.part}};
            ",
          ]
        env:
          - name: DOCKER_HOST
            value: 127.0.0.1
        volumeMounts:
          - name: workdir
            mountPath: /workdir

      sidecars:
        - name: dind
          image: docker:19.03.13-dind
          command: [dockerd-entrypoint.sh]
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          securityContext:
            privileged: true
          mirrorVolumeMounts: true

    - name: bump-version
      inputs:
        artifacts:
          - name: deploy-source
            path: /deploy-src
            git:
              repo: https://github.com/wluh1/k8s-ci-cd-conf.git
              revision: "HEAD"
      container:
        image: python:3.8
        command: ["/bin/sh", "-c"]
        args: [
            '
            cd /deploy-src;
            git status;
            ls -l;
            pip install pyyaml;
            python bump_version.py;
            git config user.email "william.johansson98@gmail.com";
            git config user.name "ArgoWorkflowsPipeline";
            git status;
            git add values.yaml;
            git commit -m "bump-version";
            git push https://${GITHUB_TOKEN}@github.com/${GITHUB_USERNAME}/k8s-ci-cd-conf.git;
            ',
          ]
        env:
          - name: GITHUB_USERNAME
            valueFrom:
              secretKeyRef:
                name: github-creds
                key: username
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-creds
                key: token
